
#ifndef SENSOR_CONFIG_H_
#define SENSOR_CONFIG_H_
#define MIPI_CTRL00_CLOCK_LANE_GATE		0x20
#define MIPI_CTRL00_BUS_IDLE			0x2
#define MIPI_CTRL00_CLOCK_LANE_DISABLE		0x1
#define OV5647_SW_STANDBY		0x0100
#define OV5647_SW_RESET			0x0103
#define OV5647_REG_CHIPID_H		0x300A
#define OV5647_REG_CHIPID_L		0x300B
#define OV5640_REG_PAD_OUT		0x300D
#define OV5647_REG_FRAME_OFF_NUMBER	0x4202
#define OV5647_REG_MIPI_CTRL00		0x4800
#define OV5647_REG_MIPI_CTRL14		0x4814
//#define Camera_V13 1
#define REG_TERM 0xfffe
#define VAL_TERM 0xfe
#define REG_DLY  0xffff

//#define Camera_V13 1

#define OV5647_ROW_START		0x01
#define OV5647_ROW_START_MIN		0
#define OV5647_ROW_START_MAX		2004
#define OV5647_ROW_START_DEF		54

#define OV5647_COLUMN_START		0x02
#define OV5647_COLUMN_START_MIN		0
#define OV5647_COLUMN_START_MAX		2750
#define OV5647_COLUMN_START_DEF		16

#define OV5647_WINDOW_HEIGHT		0x03
#define OV5647_WINDOW_HEIGHT_MIN	2
#define OV5647_WINDOW_HEIGHT_MAX	2006
#define OV5647_WINDOW_HEIGHT_DEF	1944

#define OV5647_WINDOW_WIDTH		0x04
#define OV5647_WINDOW_WIDTH_MIN		2
#define OV5647_WINDOW_WIDTH_MAX		2752
#define OV5647_WINDOW_WIDTH_DEF		2592
#define TABLE_END		0xffff



//-----------------------------------------------------------------------------------------

typedef struct  {
		uint16_t addr;
		uint8_t data;
 } config_word_t;

 static config_word_t const cfg_init_[] =
 {
 	//[7]=0 Software reset; [6]=1 Software power down; Default=0x02
 	{0x3008, 0x42},
 	//[1]=1 System input clock from PLL; Default read = 0x11
 	{0x3103, 0x03},
 	//[3:0]=0000 MD2P,MD2N,MCP,MCN input; Default=0x00
 	{0x3017, 0x00},
 	//[7:2]=000000 MD1P,MD1N, D3:0 input; Default=0x00
 	{0x3018, 0x00},
 	//[6:4]=001 PLL charge pump, [3:0]=1000 MIPI 8-bit mode
 	{0x3034, 0x18},

 	//              +----------------+        +------------------+         +---------------------+        +---------------------+
 	//XVCLK         | PRE_DIV0       |        | Mult (4+252)     |         | Sys divider (0=16)  |        | MIPI divider (0=16) |
 	//+-------+-----> 3037[3:0]=0001 +--------> 3036[7:0]=0x38   +---------> 3035[7:4]=0001      +--------> 3035[3:0]=0001      |
 	//12MHz   |     | / 1            | 12MHz  | * 56             | 672MHz  | / 1                 | 672MHz | / 1                 |
 	//        |     +----------------+        +------------------+         +----------+----------+        +----------+----------+
 	//        |                                                                       |                              |
 	//        |                                                                       |                      MIPISCLK|672MHz
 	//        |                                                                       |                              |
 	//        |     +----------------+        +------------------+         +----------v----------+        +----------v----------+
 	//        |     | PRE_DIVSP      |        | R_DIV_SP         |         | PLL R divider       |        | MIPI PHY            | MIPI_CLK
 	//        +-----> 303d[5:4]=01   +--------> 303d[2]=0 (+1)   |         | 3037[4]=1 (+1)      |        |                     +------->
 	//              | / 1.5          |  8MHz  | / 1              |         | / 2                 |        | / 2                 | 336MHz
 	//              +----------------+        +---------+--------+         +----------+----------+        +---------------------+
 	//                                                  |                             |
 	//                                                  |                             |
 	//                                                  |                             |
 	//              +----------------+        +---------v--------+         +----------v----------+        +---------------------+
 	//              | SP divider     |        | Mult             |         | BIT div (MIPI 8/10) |        | SCLK divider        | SCLK
 	//              | 303c[3:0]=0x1  +<-------+ 303b[4:0]=0x19   |         | 3034[3:0]=0x8)      +----+---> 3108[1:0]=01 (2^)   +------->
 	//              | / 1            | 200MHz | * 25             |         | / 2                 |    |   | / 2                 | 84MHz
 	//              +--------+-------+        +------------------+         +----------+----------+    |   +---------------------+
 	//                       |                                                        |               |
 	//                       |                                                        |               |
 	//                       |                                                        |               |
 	//              +--------v-------+                                     +----------v----------+    |   +---------------------+
 	//              | R_SELD5 div    | ADCCLK                              | PCLK div            |    |   | SCLK2x divider      |
 	//              | 303d[1:0]=001  +------->                             | 3108[5:4]=00 (2^)   |    +---> 3108[3:2]=00 (2^)   +------->
 	//              | / 1            | 200MHz                              | / 1                 |        | / 1                 | 168MHz
 	//              +----------------+                                     +----------+----------+        +---------------------+
 	//                                                                                |
 	//                                                                                |
 	//                                                                                |
 	//                                                                     +----------v----------+        +---------------------+
 	//                                                                     | P divider (* #lanes)| PCLK   | Scale divider       |
 	//                                                                     | 3035[3:0]=0001      +--------> 3824[4:0]           |
 	//                                                                     | / 1                 | 168MHz | / 2                 |
 	//                                                                     +---------------------+        +---------------------+

 	//PLL1 configuration
 	//[7:4]=0001 System clock divider /1, [3:0]=0001 Scale divider for MIPI /1
 	{0x3035, 0x11},
 	//[7:0]=56 PLL multiplier
 	{0x3036, 0x38},
 	//[4]=1 PLL root divider /2, [3:0]=1 PLL pre-divider /1
 	{0x3037, 0x11},
 	//[5:4]=00 PCLK root divider /1, [3:2]=00 SCLK2x root divider /1, [1:0]=01 SCLK root divider /2
 	{0x3108, 0x01},
 	//PLL2 configuration
 	//[5:4]=01 PRE_DIV_SP /1.5, [2]=1 R_DIV_SP /1, [1:0]=00 DIV12_SP /1
 	{0x303D, 0x10},
 	//[4:0]=11001 PLL2 multiplier DIV_CNT5B = 25
 	{0x303B, 0x19},

 	{0x3630, 0x2e},
 	{0x3631, 0x0e},
 	{0x3632, 0xe2},
 	{0x3633, 0x23},
 	{0x3621, 0xe0},
 	{0x3704, 0xa0},
 	{0x3703, 0x5a},
 	{0x3715, 0x78},
 	{0x3717, 0x01},
 	{0x370b, 0x60},
 	{0x3705, 0x1a},
 	{0x3905, 0x02},
 	{0x3906, 0x10},
 	{0x3901, 0x0a},
 	{0x3731, 0x02},
 	//VCM debug mode
 	{0x3600, 0x37},
 	{0x3601, 0x33},
 	//System control register changing not recommended
 	{0x302d, 0x60},
 	//??
 	{0x3620, 0x52},
 	{0x371b, 0x20},
 	//?? DVP
 	{0x471c, 0x50},

 	{0x3a13, 0x43},
 	{0x3a18, 0x00},
 	{0x3a19, 0xf8},
 	{0x3635, 0x13},
 	{0x3636, 0x06},
 	{0x3634, 0x44},
 	{0x3622, 0x01},
 	{0x3c01, 0x34},
 	{0x3c04, 0x28},
 	{0x3c05, 0x98},
 	{0x3c06, 0x00},
 	{0x3c07, 0x08},
 	{0x3c08, 0x00},
 	{0x3c09, 0x1c},
 	{0x3c0a, 0x9c},
 	{0x3c0b, 0x40},

 	//[7]=1 color bar enable, [3:2]=00 eight color bar
 	{0x503d, 0x00},
 	//[2]=1 ISP vflip, [1]=1 sensor vflip
 	{0x3820, 0x46},

 	//[7:5]=010 Two lane mode, [4]=0 MIPI HS TX no power down, [3]=0 MIPI LP RX no power down, [2]=1 MIPI enable, [1:0]=10 Debug mode; Default=0x58
 	{0x300e, 0x45},
 	//[5]=0 Clock free running, [4]=1 Send line short packet, [3]=0 Use lane1 as default, [2]=1 MIPI bus LP11 when no packet; Default=0x04
 	{0x4800, 0x14},
 	{0x302e, 0x08},
 	//[7:4]=0x3 YUV422, [3:0]=0x0 YUYV
 	//{0x4300, 0x30},
 	//[7:4]=0x6 RGB565, [3:0]=0x0 {b[4:0],g[5:3],g[2:0],r[4:0]}
 	{0x4300, 0x6f},
 	{0x501f, 0x01},

 	{0x4713, 0x03},
 	{0x4407, 0x04},
 	{0x440e, 0x00},
 	{0x460b, 0x35},
 	//[1]=0 DVP PCLK divider manual control by 0x3824[4:0]
 	{0x460c, 0x20},
 	//[4:0]=1 SCALE_DIV=INT(3824[4:0]/2)
 	{0x3824, 0x01},

 	//MIPI timing
 	//		{0x4805, 0x10}, //LPX global timing select=auto
 	//		{0x4818, 0x00}, //hs_prepare + hs_zero_min ns
 	//		{0x4819, 0x96},
 	//		{0x482A, 0x00}, //hs_prepare + hs_zero_min UI
 	//
 	//		{0x4824, 0x00}, //lpx_p_min ns
 	//		{0x4825, 0x32},
 	//		{0x4830, 0x00}, //lpx_p_min UI
 	//
 	//		{0x4826, 0x00}, //hs_prepare_min ns
 	//		{0x4827, 0x32},
 	//		{0x4831, 0x00}, //hs_prepare_min UI

 	//[7]=1 LENC correction enabled, [5]=1 RAW gamma enabled, [2]=1 Black pixel cancellation enabled, [1]=1 White pixel cancellation enabled, [0]=1 Color interpolation enabled
 	{0x5000, 0x07},
 	//[7]=0 Special digital effects, [5]=0 scaling, [2]=0 UV average disabled, [1]=1 Color matrix enabled, [0]=1 Auto white balance enabled
 	{0x5001, 0x03}
 };
 static	config_word_t const cfg_XGA_30fps_[] =
 {
			{0x3034, 0x1A},
			{0x3035, 0x14},
			{0x3036, 0x38},
			{0x3c07, 0x08},
			{0x3c09, 0x1c},
			{0x3c0a, 0x9c},
			{0x3c0b, 0x40},
			{0x3820, 0x41},
			{0x3821, 0x07},
			{0x3814, 0x31},
			{0x3815, 0x31},
			{0x3800, 0x00},
			{0x3801, 0x00},
			{0x3802, 0x00},
			{0x3803, 0x04},
			{0x3804, 0x0a},
			{0x3805, 0x3f},
			{0x3806, 0x07},
			{0x3807, 0x9b},
			{0x3808, 0x02},
			{0x3809, 0x80},
			{0x380a, 0x01},
			{0x380b, 0xe0},
			{0x380c, 0x07},
			{0x380d, 0x68},
			{0x380e, 0x04},
			{0x380f, 0x38},
			{0x3810, 0x00},
			{0x3811, 0x10},
			{0x3812, 0x00},
			{0x3813, 0x06},
			{0x3618, 0x00},
			{0x3612, 0x29},
			{0x3708, 0x64},
			{0x3709, 0x52},
			{0x370c, 0x03},
			{0x3a02, 0x03},
			{0x3a03, 0xd8},
			{0x3a08, 0x01},
			{0x3a09, 0x0e},
			{0x3a0a, 0x00},
			{0x3a0b, 0xf6},
			{0x3a0e, 0x03},
			{0x3a0d, 0x04},
			{0x3a14, 0x03},
			{0x3a15, 0xd8},
			{0x4001, 0x02},
			{0x4004, 0x02},
			{0x4713, 0x03},
			{0x4407, 0x04},
			{0x460b, 0x35},
			{0x460c, 0x22},
			{0x3824, 0x02},
			{0x5001, 0xa3},
			{0x3503, 0x00},
			{0x4300, 0x00},
			{0x501f, 0x03},
			{0x3808, 0x04},
			{0x3809, 0x00},
			{0x380a, 0x03},
			{0x380b, 0x00},
			{0x3035, 0x12}
 };
static	config_word_t const cfg_1080p_30fps_[] =
	{//1920 x 1080 @ 30fps, RAW10, MIPISCLK=420, SCLK=84MHz, PCLK=84M
		//PLL1 configuration
		//[7:4]=0010 System clock divider /2, [3:0]=0001 Scale divider for MIPI /1
		{0x3035, 0x21}, // 30fps setting
		//[7:0]=105 PLL multiplier
		{0x3036, 0x69},
		//[4]=0 PLL root divider /1, [3:0]=5 PLL pre-divider /1.5
		{0x3037, 0x05},
		//[5:4]=01 PCLK root divider /2, [3:2]=00 SCLK2x root divider /1, [1:0]=01 SCLK root divider /2
		{0x3108, 0x11},

		//[6:4]=001 PLL charge pump, [3:0]=1010 MIPI 10-bit mode
		{0x3034, 0x1A},

		//[3:0]=0 X address start high byte
		{0x3800, (336 >> 8) & 0x0F},
		//[7:0]=0 X address start low byte
		{0x3801, 336 & 0xFF},
		//[2:0]=0 Y address start high byte
		{0x3802, (426 >> 8) & 0x07},
		//[7:0]=0 Y address start low byte
		{0x3803, 426 & 0xFF},

		//[3:0] X address end high byte
		{0x3804, (2287 >> 8) & 0x0F},
		//[7:0] X address end low byte
		{0x3805, 2287 & 0xFF},
		//[2:0] Y address end high byte
		{0x3806, (1529 >> 8) & 0x07},
		//[7:0] Y address end low byte
		{0x3807, 1529 & 0xFF},

		//[3:0]=0 timing hoffset high byte
		{0x3810, (16 >> 8) & 0x0F},
		//[7:0]=0 timing hoffset low byte
		{0x3811, 16 & 0xFF},
		//[2:0]=0 timing voffset high byte
		{0x3812, (12 >> 8) & 0x07},
		//[7:0]=0 timing voffset low byte
		{0x3813, 12 & 0xFF},

		//[3:0] Output horizontal width high byte
		{0x3808, (1920 >> 8) & 0x0F},
		//[7:0] Output horizontal width low byte
		{0x3809, 1920 & 0xFF},
		//[2:0] Output vertical height high byte
		{0x380a, (1080 >> 8) & 0x7F},
		//[7:0] Output vertical height low byte
		{0x380b, 1080 & 0xFF},

		//HTS line exposure time in # of pixels Tline=HTS/sclk
		{0x380c, (2500 >> 8) & 0x1F},
		{0x380d, 2500 & 0xFF},
		//VTS frame exposure time in # lines
		{0x380e, (1120 >> 8) & 0xFF},
		{0x380f, 1120 & 0xFF},

		//[7:4]=0x1 horizontal odd subsample increment, [3:0]=0x1 horizontal even subsample increment
		{0x3814, 0x11},
		//[7:4]=0x1 vertical odd subsample increment, [3:0]=0x1 vertical even subsample increment
		{0x3815, 0x11},

		//[2]=0 ISP mirror, [1]=0 sensor mirror, [0]=0 no horizontal binning
		{0x3821, 0x00},

		//little MIPI shit: global timing unit, period of PCLK in ns * 2(depends on # of lanes)
		{0x4837, 24}, // 1/84M*2

		//Undocumented anti-green settings
		{0x3618, 0x00}, // Removes vertical lines appearing under bright light
		{0x3612, 0x59},
		{0x3708, 0x64},
		{0x3709, 0x52},
		{0x370c, 0x03},

		//[7:4]=0x0 Formatter RAW, [3:0]=0x0 BGBG/GRGR
		{0x4300, 0x00},
		//[2:0]=0x3 Format select ISP RAW (DPC)
		{0x501f, 0x03}
	};
static config_word_t const cfg_advanced_awb_[] =
{
	// Enable Advanced AWB
	{0x3406 ,0x00},
	{0x5192 ,0x04},
	{0x5191 ,0xf8},
	{0x518d ,0x26},
	{0x518f ,0x42},
	{0x518e ,0x2b},
	{0x5190 ,0x42},
	{0x518b ,0xd0},
	{0x518c ,0xbd},
	{0x5187 ,0x18},
	{0x5188 ,0x18},
	{0x5189 ,0x56},
	{0x518a ,0x5c},
	{0x5186 ,0x1c},
	{0x5181 ,0x50},
	{0x5184 ,0x20},
	{0x5182 ,0x11},
	{0x5183 ,0x00},
	{0x5001 ,0x03}
};

static config_word_t const cfg_simple_awb_[] =
{
	// Disable Advanced AWB
	{0x518d ,0x00},
	{0x518f ,0x20},
	{0x518e ,0x00},
	{0x5190 ,0x20},
	{0x518b ,0x00},
	{0x518c ,0x00},
	{0x5187 ,0x10},
	{0x5188 ,0x10},
	{0x5189 ,0x40},
	{0x518a ,0x40},
	{0x5186 ,0x10},
	{0x5181 ,0x58},
	{0x5184 ,0x25},
	{0x5182 ,0x11},

	// Enable simple AWB
	{0x3406 ,0x00},
	{0x5183 ,0x80},
	{0x5191 ,0xff},
	{0x5192 ,0x00},
	{0x5001 ,0x03}
};

static config_word_t const cfg_disable_awb_[] =
{
	{0x5001 ,0x02}
};



// atomar register element
struct sensor_cmd {
	 unsigned short reg;
	 unsigned char	val;
};

//-----------------------------------------------------------------------------------------
static struct sensor_cmd sensor_common[] = {
	{ 0x3034, 0x1A },
//	{ 0x3035, 0x21 },
//	{ 0x3036, 0x46 },
//	{ 0x303c, 0x11 },
	{ 0x3106, 0xf5 },
//	{ 0x3821, 0x07 },
//	{ 0x3820, 0x41 },
	{ 0x3827, 0xec },
	{ 0x370c, 0x0f },
//	{ 0x3612, 0x59 },
//	{ 0x3618, 0x00 },
	{ 0x5000, 0x06 },
	{ 0x5001, 0x00 },
	{ 0x5002, 0x40 },
	{ 0x5003, 0x08 },
	{ 0x5a00, 0x08 },
	{ 0x3000, 0x00 },
	{ 0x3001, 0x00 },
	{ 0x3002, 0x00 },
	{ 0x3016, 0x08 },
	{ 0x3017, 0xe0 },
	{ 0x3018, 0x44 },
	{ 0x301c, 0xf8 },
	{ 0x301d, 0xf0 },
	{ 0x3a18, 0x00 },
	{ 0x3a19, 0xf8 },
	{ 0x3c01, 0x80 },
	{ 0x3b07, 0x0c },
//	{ 0x380c, 0x07 },
//	{ 0x380d, 0x68 },
//	{ 0x380e, 0x03 },
//	{ 0x380f, 0xd8 },
//	{ 0x3814, 0x31 },
//	{ 0x3815, 0x31 },
//	{ 0x3708, 0x64 },
//	{ 0x3709, 0x52 },
	{ 0x3630, 0x2e },
	{ 0x3632, 0xe2 },
	{ 0x3633, 0x23 },
	{ 0x3634, 0x44 },
	{ 0x3636, 0x06 },
	{ 0x3620, 0x64 },
	{ 0x3621, 0xe0 },
	{ 0x3600, 0x37 },
	{ 0x3704, 0xa0 },
	{ 0x3703, 0x5a },
	{ 0x3715, 0x78 },
	{ 0x3717, 0x01 },
	{ 0x3731, 0x02 },
	{ 0x370b, 0x60 },
	{ 0x3705, 0x1a },
	{ 0x3f05, 0x02 },
	{ 0x3f06, 0x10 },
	{ 0x3f01, 0x0a },
//	{ 0x3a08, 0x01 },
//	{ 0x3a09, 0x27 },
//	{ 0x3a0a, 0x00 },
//	{ 0x3a0b, 0xf6 },
//	{ 0x3a0d, 0x04 },
//	{ 0x3a0e, 0x03 },
	{ 0x3a0f, 0x58 },
	{ 0x3a10, 0x50 },
	{ 0x3a1b, 0x58 },
	{ 0x3a1e, 0x50 },
	{ 0x3a11, 0x60 },
	{ 0x3a1f, 0x28 },
	{ 0x4001, 0x02 },
//	{ 0x4004, 0x02 },
	{ 0x4000, 0x09 },
//	{ 0x4837, 0x24 },
	{ 0x4050, 0x6e },
	{ 0x4051, 0x8f },
	//{ 0x0000, 0x00 },
	 { TABLE_END, 0x00 },
};

/* 2592 x 1944 @ 15 fps */
	/*
	 * MIPI Link   : 425.000 Mbps
	 * Pixel clock : 85.000 MHz
	 * Timing zone : 2752 x 1974
	 * FPS         : 15.6
	*/
static struct sensor_cmd sensor_2592_1944_15[] = {
	{ 0x3035, 0x21 },
	{ 0x3036, 0x66 },
	{ 0x303c, 0x11 },
	{ 0x3821, 0x06 },
	{ 0x3820, 0x00 },
	{ 0x3612, 0x5b },
	{ 0x3618, 0x04 },
	{ 0x380c, 0x0a },
	{ 0x380d, 0xc0 },
	{ 0x380e, 0x07 },
	{ 0x380f, 0xb6 },
	{ 0x3814, 0x11 },
	{ 0x3815, 0x11 },
	{ 0x3708, 0x64 },
	{ 0x3709, 0x12 },
	{ 0x3808, 0x0a },
	{ 0x3809, 0x20 },
	{ 0x380a, 0x07 },
	{ 0x380b, 0x98 },
	{ 0x3800, 0x00 },
	{ 0x3801, 0x0c },
	{ 0x3802, 0x00 },
	{ 0x3803, 0x02 },
	{ 0x3804, 0x0a },
	{ 0x3805, 0x33 },
	{ 0x3806, 0x07 },
	{ 0x3807, 0xa1 },
	{ 0x3a08, 0x01 },
	{ 0x3a09, 0x28 },
	{ 0x3a0a, 0x00 },
	{ 0x3a0b, 0xf6 },
	{ 0x3a0d, 0x07 },
	{ 0x3a0e, 0x06 },
	{ 0x4004, 0x04 },
	{ 0x4837, 0x19 },
	{ TABLE_END, 0x00 },
};

/* 1936 x 1088 @ 30 fps */
	/*
	 * MIPI Link   : 416.667 Mbps
	 * Pixel clock : 83.333 MHz
	 * Timing zone : 2416 x 1104
	 * FPS         : 31.2
	 */
static struct sensor_cmd sensor_1936_1088_30[] = {
	{ 0x3035, 0x21 },
	{ 0x3036, 0x64 },
	{ 0x303c, 0x11 },
	{ 0x3821, 0x06 },
	{ 0x3820, 0x00 },
	{ 0x3612, 0x5b },
	{ 0x3618, 0x04 },
	{ 0x380c, 0x09 },
	{ 0x380d, 0x70 },
	{ 0x380e, 0x04 },
	{ 0x380f, 0x50 },
	{ 0x3814, 0x11 },
	{ 0x3815, 0x11 },
	{ 0x3708, 0x64 },
	{ 0x3709, 0x12 },
	{ 0x3808, 0x07 },
	{ 0x3809, 0x90 },	/* 80 */
	{ 0x380a, 0x04 },
	{ 0x380b, 0x40 },	/* 38 */
	{ 0x3800, 0x01 },
	{ 0x3801, 0x54 },	/* 5c */
	{ 0x3802, 0x01 },
	{ 0x3803, 0xb0 },	/* b2 */
	{ 0x3804, 0x08 },
	{ 0x3805, 0xeb },	/* e3 */
	{ 0x3806, 0x05 },
	{ 0x3807, 0xf3 },	/* f1 */
	{ 0x3a08, 0x01 },
	{ 0x3a09, 0x4b },
	{ 0x3a0a, 0x01 },
	{ 0x3a0b, 0x13 },
	{ 0x3a0d, 0x04 },
	{ 0x3a0e, 0x03 },
	{ 0x4004, 0x04 },
	{ 0x4837, 0x19 },
	{ TABLE_END, 0x00 },
};

/* 1296 x 968 @ 30 fps */
	/*
	 * MIPI Link   : 291.667 Mbps
	 * Pixel clock : 58.333 MHz
	 * Timing zone : 1896 x 984
	 * FPS         : 31.3
	 */
static struct sensor_cmd sensor_1296_968_30[] = {
	{ 0x3035, 0x21 },
	{ 0x3036, 0x46 },
	{ 0x303c, 0x11 },
	{ 0x3821, 0x07 },
	{ 0x3820, 0x41 },
	{ 0x3612, 0x59 },
	{ 0x3618, 0x00 },
	{ 0x380c, 0x07 },
	{ 0x380d, 0x68 },
	{ 0x380e, 0x03 },
	{ 0x380f, 0xd8 },
	{ 0x3814, 0x31 },
	{ 0x3815, 0x31 },
	{ 0x3708, 0x64 },
	{ 0x3709, 0x52 },
	{ 0x3808, 0x05 },
	{ 0x3809, 0x10 },	/* 00 */
	{ 0x380a, 0x03 },
	{ 0x380b, 0xc8 },	/* c0 */
	{ 0x3800, 0x00 },
	{ 0x3801, 0x00 },	/* 18 */
	{ 0x3802, 0x00 },
	{ 0x3803, 0x08 },	/* 0e */
	{ 0x3804, 0x0a },
	{ 0x3805, 0x3b },	/* 27 */
	{ 0x3806, 0x07 },
	{ 0x3807, 0x9b },	/* 95 */
	{ 0x3a08, 0x01 },
	{ 0x3a09, 0x27 },
	{ 0x3a0a, 0x00 },
	{ 0x3a0b, 0xf6 },
	{ 0x3a0d, 0x04 },
	{ 0x3a0e, 0x03 },
	{ 0x4004, 0x02 },
	{ 0x4837, 0x24 },
	{ TABLE_END, 0x00 },
};

static struct sensor_cmd ov5647_sensor_common_10bit[] = {
//	 { 0x3034, 0x1A },	// 10 bit mode
  { 0x3034, 0x10 },	// 8 bit mode
	 { 0x503D, 0x00 },	// Test Pattern
	 { 0x3035, 0x21 },	// CLK DIV
	 { 0x3036, 0x46 },	// PLL MULT
	 { 0x303c, 0x11 },	// PLLS CP
	 { 0x3106, 0xf5 },	// PLL DIV
	 { 0x3821, 0x07 },	// TIMING TC
	 { 0x3820, 0x41 },	// TIMING TC
	 { 0x3827, 0xec },
	 { 0x370c, 0x0f },
	 { 0x3612, 0x59 },
	 { 0x3503, 0x00 }, // AEC/AGC
	 { 0x5000, 0x89 }, // Lens Correction
	 { 0x5001, 0x01 }, // AWB
	 { 0x5002, 0x41 }, // AWB GAIN, OPT, WIN
	 { 0x5003, 0x0A }, // BIN
	 { 0x5a00, 0x08 },
	 { 0x3000, 0x00 },
	 { 0x3001, 0x00 },
	 { 0x3002, 0x00 },
	 { 0x3016, 0x08 },
	 { 0x3017, 0xe0 },
	 { 0x3018, 0x44 },
	 { 0x301c, 0xf8 },
	 { 0x301d, 0xf0 },
	 { 0x3a18, 0x00 },
	 { 0x3a19, 0xf8 },
	 { 0x3c01, 0x80 }, // 50/60HZ Detection
	 { 0x3b07, 0x0c },
	 { 0x380c, 0x07 },
	 { 0x380d, 0x68 },
	 { 0x380e, 0x03 },
	 { 0x380f, 0xd8 },
	 { 0x3814, 0x31 },
	 { 0x3815, 0x31 },
	 { 0x3708, 0x64 },
	 { 0x3709, 0x52 },
	 { 0x3630, 0x2e },
	 { 0x3632, 0xe2 },
	 { 0x3633, 0x23 },
	 { 0x3634, 0x44 },
	 { 0x3636, 0x06 },
	 { 0x3620, 0x65 },  // V BINNING
	 { 0x3621, 0xe1 },  // H BINNING
	 { 0x3600, 0x37 },
	 { 0x3704, 0xa0 },
	 { 0x3703, 0x5a },
	 { 0x3715, 0x78 },
	 { 0x3717, 0x01 },
	 { 0x3731, 0x02 },
	 { 0x370b, 0x60 },
	 { 0x3705, 0x1a },
	 { 0x3f05, 0x02 },
	 { 0x3f06, 0x10 },
	 { 0x3f01, 0x0a },
	 { 0x3a08, 0x01 },
	 { 0x3a09, 0x27 },
	 { 0x3a0a, 0x00 },
	 { 0x3a0b, 0xf6 },
	 { 0x3a0d, 0x04 },
	 { 0x3a0e, 0x03 },
	 { 0x3a0f, 0x58 },
	 { 0x3a10, 0x50 },
	 { 0x3a1b, 0x58 },
	 { 0x3a1e, 0x50 },
	 { 0x3a11, 0x60 },
	 { 0x3a1f, 0x28 },
	 { 0x4001, 0x02 },
	 { 0x4004, 0x02 },
	 { 0x4000, 0x09 },
	 { 0x4837, 0x24 },
	 { 0x4050, 0x6e },
	 { 0x4051, 0x8f },
	 { TABLE_END, 0x00 },
};

//-----------------------------------------------------------------------------------------

static struct sensor_cmd ov5647_sensor_common_test[] = {
	 { 0x3034, 0x1A },	// 10 bit mode
	 { 0x503D, 0x80 },
//  { 0x3035, 0x21 },
//  { 0x3036, 0x46 },
//  { 0x303c, 0x11 },
	 { 0x3106, 0xf5 },
//  { 0x3821, 0x07 },
//  { 0x3820, 0x41 },
	 { 0x3827, 0xec },
	 { 0x370c, 0x0f },
//  { 0x3612, 0x59 },
//  { 0x3618, 0x00 },
	 { 0x5000, 0x06 },
	 { 0x5001, 0x00 },
	 { 0x5002, 0x40 },
	 { 0x5003, 0x08 },
	 { 0x5a00, 0x08 },
	 { 0x3000, 0x00 },
	 { 0x3001, 0x00 },
	 { 0x3002, 0x00 },
	 { 0x3016, 0x08 },
	 { 0x3017, 0xe0 },
	 { 0x3018, 0x44 },
	 { 0x301c, 0xf8 },
	 { 0x301d, 0xf0 },
	 { 0x3a18, 0x00 },
	 { 0x3a19, 0xf8 },
	 { 0x3c01, 0x80 },
	 { 0x3b07, 0x0c },
//  { 0x380c, 0x07 },
//  { 0x380d, 0x68 },
//  { 0x380e, 0x03 },
//  { 0x380f, 0xd8 },
//  { 0x3814, 0x31 },
//  { 0x3815, 0x31 },
//  { 0x3708, 0x64 },
//  { 0x3709, 0x52 },
	 { 0x3630, 0x2e },
	 { 0x3632, 0xe2 },
	 { 0x3633, 0x23 },
	 { 0x3634, 0x44 },
	 { 0x3636, 0x06 },
	 { 0x3620, 0x64 },
	 { 0x3621, 0xe0 },
	 { 0x3600, 0x37 },
	 { 0x3704, 0xa0 },
	 { 0x3703, 0x5a },
	 { 0x3715, 0x78 },
	 { 0x3717, 0x01 },
	 { 0x3731, 0x02 },
	 { 0x370b, 0x60 },
	 { 0x3705, 0x1a },
	 { 0x3f05, 0x02 },
	 { 0x3f06, 0x10 },
	 { 0x3f01, 0x0a },
//  { 0x3a08, 0x01 },
//  { 0x3a09, 0x27 },
//  { 0x3a0a, 0x00 },
//  { 0x3a0b, 0xf6 },
//  { 0x3a0d, 0x04 },
//  { 0x3a0e, 0x03 },
	 { 0x3a0f, 0x58 },
	 { 0x3a10, 0x50 },
	 { 0x3a1b, 0x58 },
	 { 0x3a1e, 0x50 },
	 { 0x3a11, 0x60 },
	 { 0x3a1f, 0x28 },
	 { 0x4001, 0x02 },
//  { 0x4004, 0x02 },
	 { 0x4000, 0x09 },
//  { 0x4837, 0x24 },
	 { 0x4050, 0x6e },
	 { 0x4051, 0x8f },
	 { TABLE_END, 0x00 },
};


static struct sensor_cmd  OV5647_1080p_REG_1[] =
{
		  {0x3035,0x11}, //clk
		  {0x3036,0x50}, //clk
		  {0x303c,0x11}, //clk
		  {0x3820,0x00}, //vbin
		  {0x3821,0x06}, //hbin
		  {0x3612,0x4b}, //
		  {0x3618,0x04}, //
		  {0x3708,0x24}, //
		  {0x3709,0x12}, //
		  {0x370c,0x00}, //
		  {0x380c,0x09}, //[4:0]hts high
		  {0x380d,0x4e}, //[7:0]hts low
		  {0x380e,0x04}, //[4:0]vts high
		  {0x380f,0x60}, //[7:0]vts low
		  {0x3814,0x11}, //h subsample inc
		  {0x3815,0x11}, //v subsample inc
		  {0x3808,0x07}, //[4:0]dvp h out high
		  {0x3809,0x80}, //[7:0]dvp h out low
		  {0x380a,0x04}, //[4:0]dvp v out high
		  {0x380b,0x38}, //[7:0]dvp v out low
		  {0x3800,0x01}, //[4:0]dvp h start
		  {0x3801,0x5c}, //[7:0]dvp h start
		  {0x3802,0x01}, //[4:0]dvp v start
		  {0x3803,0xb2}, //[7:0]dvp v start
		  {0x3804,0x08}, //[4:0]dvp h end
		  {0x3805,0xe3}, //[7:0]dvp h end
		  {0x3806,0x05}, //[4:0]dvp v end
		  {0x3807,0xf1}, //[7:0]dvp v end
		  { TABLE_END, 0x00 },
		//  {0x3a08,0x01}, //
		//  {0x3a09,0x4b}, //
		//  {0x3a0a,0x01}, //
		//  {0x3a0b,0x14}, //
		//  {0x3a0d,0x04}, //
		//  {0x3a0e,0x03}, //
		  //{REG_TERM,VAL_TERM},


};

//-----------------------------------------------------------------------------------------

/* 2592 x 1944 @ 15 fps */
	 /*
	  * MIPI Link	: 425.000 Mbps
	  * Pixel clock : 85.000 MHz
	  * Timing zone : 2752 x 1974
	  * FPS			: 15.6
	 */
static struct sensor_cmd ov5647_sensor_2592_1944_15[] = {
	 { 0x3035, 0x21 },
	 { 0x3036, 0x66 },
	 { 0x303c, 0x11 },
	 { 0x3821, 0x06 },
	 { 0x3820, 0x00 },
	 { 0x3612, 0x5b },
	 { 0x3618, 0x04 },
	 { 0x380c, 0x0a },
	 { 0x380d, 0xc0 },
	 { 0x380e, 0x07 },
	 { 0x380f, 0xb6 },
	 { 0x3814, 0x11 },
	 { 0x3815, 0x11 },
	 { 0x3708, 0x64 },
	 { 0x3709, 0x12 },
	 { 0x3808, 0x0a },
	 { 0x3809, 0x20 },
	 { 0x380a, 0x07 },
	 { 0x380b, 0x98 },
	 { 0x3800, 0x00 },
	 { 0x3801, 0x0c },
	 { 0x3802, 0x00 },
	 { 0x3803, 0x02 },
	 { 0x3804, 0x0a },
	 { 0x3805, 0x33 },
	 { 0x3806, 0x07 },
	 { 0x3807, 0xa1 },
	 { 0x3a08, 0x01 },
	 { 0x3a09, 0x28 },
	 { 0x3a0a, 0x00 },
	 { 0x3a0b, 0xf6 },
	 { 0x3a0d, 0x07 },
	 { 0x3a0e, 0x06 },
	 { 0x4004, 0x04 },
	 { 0x4837, 0x19 },
	 { TABLE_END, 0x00 },
};

//-----------------------------------------------------------------------------------------

/* 1936 x 1088 @ 30 fps */
	 /*
	  * MIPI Link	: 416.667 Mbps
	  * Pixel clock : 83.333 MHz
	  * Timing zone : 2416 x 1104
	  * FPS			: 31.2
	  */
static struct sensor_cmd ov5647_sensor_1936_1088_30[] = {
	 { 0x3035, 0x21 },
	 { 0x3036, 0x64 },
	 { 0x303c, 0x11 },
	 { 0x3821, 0x06 },
	 { 0x3820, 0x00 },
	 { 0x3612, 0x5b },
	 { 0x3618, 0x04 },
	 { 0x380c, 0x09 },
	 { 0x380d, 0x70 },
	 { 0x380e, 0x04 },
	 { 0x380f, 0x50 },
	 { 0x3814, 0x11 },
	 { 0x3815, 0x11 },
	 { 0x3708, 0x64 },
	 { 0x3709, 0x12 },
	 { 0x3808, 0x07 },
	 { 0x3809, 0x90 },	/* 80 */
	 { 0x380a, 0x04 },
	 { 0x380b, 0x40 },	/* 38 */
	 { 0x3800, 0x01 },
	 { 0x3801, 0x54 },	/* 5c */
	 { 0x3802, 0x01 },
	 { 0x3803, 0xb0 },	/* b2 */
	 { 0x3804, 0x08 },
	 { 0x3805, 0xeb },	/* e3 */
	 { 0x3806, 0x05 },
	 { 0x3807, 0xf3 },	/* f1 */
	 { 0x3a08, 0x01 },
	 { 0x3a09, 0x4b },
	 { 0x3a0a, 0x01 },
	 { 0x3a0b, 0x13 },
	 { 0x3a0d, 0x04 },
	 { 0x3a0e, 0x03 },
	 { 0x4004, 0x04 },
	 { 0x4837, 0x19 },
	 { TABLE_END, 0x00 },
};

//-----------------------------------------------------------------------------------------

/* 1296 x 968 @ 30 fps */
	 /*
	  * MIPI Link	: 291.667 Mbps
	  * Pixel clock : 58.333 MHz
	  * Timing zone : 1896 x 984
	  * FPS			: 31.3
	  */
static struct sensor_cmd ov5647_sensor_1296_968_30[] = {
	{ 0x3035, 0x21 },
	{ 0x3036, 0x46 },
	{ 0x303c, 0x11 },
	{ 0x3821, 0x07 },
	{ 0x3820, 0x41 },
	{ 0x3612, 0x59 },
	{ 0x3618, 0x00 },
	{ 0x380c, 0x07 },
	{ 0x380d, 0x68 },
	{ 0x380e, 0x03 },
	{ 0x380f, 0xd8 },
	{ 0x3814, 0x31 },
	{ 0x3815, 0x31 },
	{ 0x3708, 0x64 },
	{ 0x3709, 0x52 },
	{ 0x3808, 0x05 },
	{ 0x3809, 0x10 },	/* 00 */
	{ 0x380a, 0x03 },
	{ 0x380b, 0xc8 },	/* c0 */
	{ 0x3800, 0x00 },
	{ 0x3801, 0x00 },	/* 18 */
	{ 0x3802, 0x00 },
	{ 0x3803, 0x08 },	/* 0e */
	{ 0x3804, 0x0a },
	{ 0x3805, 0x3b },	/* 27 */
	{ 0x3806, 0x07 },
	{ 0x3807, 0x9b },	/* 95 */
	{ 0x3a08, 0x01 },
	{ 0x3a09, 0x27 },
	{ 0x3a0a, 0x00 },
	{ 0x3a0b, 0xf6 },
	{ 0x3a0d, 0x04 },
	{ 0x3a0e, 0x03 },
	{ 0x4004, 0x02 },
	{ 0x4837, 0x24 },

	{ 0x5001, 0x01 }, // AWB on
    { 0x5002, 0x41 }, // AWB on
	{ TABLE_END, 0x00 },
};

//-----------------------------------------------------------------------------------------

/* 1280 x 720 @ 30 fps */
	 /*
	  * MIPI Link	: 291.667 Mbps
	  * Pixel clock : 58.333 MHz
	  * Timing zone : 1896 x 984
	  * FPS			: 31.3
	  */
static struct sensor_cmd ov5647_sensor_1280_720_30[] = {
  { 0x3035, 0x21 },	// *
  { 0x3036, 0x46 },	// * PLL multiplier
  { 0x303c, 0x11 },	// * PLL div
  { 0x3821, 0x07 },	// * Timing
  { 0x3820, 0x41 },	// * Timing
  { 0x3612, 0x59 },	// ?
  { 0x3618, 0x00 },	// ?
  { 0x380c, 0x07 },	// * Horisontal size [12:8] 1896
  { 0x380d, 0x68 },	// * Horisontal size [7:0]
  { 0x380e, 0x03 },	// * total vertical size [9:8]  984
  { 0x380f, 0xd8 },	// * total vertical size [7:0]
  { 0x3814, 0x31 },	// * timing x inc
  { 0x3815, 0x31 },	// * timing y inc
  { 0x3708, 0x64 },	//
  { 0x3709, 0x52 },	//
  { 0x3808, 0x05 },	//  out horisontal [11:8]	1280
  { 0x3809, 0x00 },	//  out horisontal [7:0]
  { 0x380a, 0x02 },	//  out vertical [11:8]	  720
  { 0x380b, 0xd0 },	//  out vertical [7:0]
  { 0x3800, 0x00 },	//  + X start [11:8]
  { 0x3801, 0x00 },	//  + X start [7:0] /* 18 */
  { 0x3802, 0x00 },	//  + Y start [11:8]
  { 0x3803, 0x08 },	//  + Y start [7:0] /* 0e */
  { 0x3804, 0x0a },	//  + X end [11:8]
  { 0x3805, 0x3b },	//  + X end [7:0]  /* 27 */
  { 0x3806, 0x07 },	//  + Y end [11:8]
  { 0x3807, 0x9b },	//  + Y end [7:0] /* 95 */
  { 0x3a08, 0x01 },	//
  { 0x3a09, 0x27 },	//
  { 0x3a0a, 0x00 },	//
  { 0x3a0b, 0xf6 },	//
  { 0x3a0d, 0x04 },	//
  { 0x3a0e, 0x03 },	//
  { 0x4004, 0x02 },	//
  { 0x4837, 0x24 },	// * PCLK period

  { 0x5001, 0x01 },	// AWB on
  { 0x5002, 0x41 },	// AWB on

  { TABLE_END,  0x00 },	//
};

//-----------------------------------------------------------------------------------------

static struct sensor_cmd ov5647_sensor_640_480_90[] = {
	 { 0x3035, 0x11 },
	 { 0x3036, 0x2a },
	 { 0x3821, 0x07 },
	 { 0x3820, 0x41 },
	 { 0x3612, 0x49 },
	 { 0x3618, 0x00 },
	 { 0x380c, 0x07 },
	 { 0x380d, 0x30 },
	 { 0x380e, 0x01 },
	 { 0x380f, 0x78 },
	 { 0x3814, 0x71 },
	 { 0x3815, 0x31 },
	 { 0x3709, 0x52 },
	 { 0x3808, 0x02 },
	 { 0x3809, 0x80 },
	 { 0x380a, 0x01 },
	 { 0x380b, 0xe8 },
	 { 0x3800, 0x00 },
	 { 0x3801, 0x10 },
	 { 0x3802, 0x00 },
	 { 0x3803, 0x00 },
	 { 0x3804, 0x0a },
	 { 0x3805, 0x2f },
	 { 0x3806, 0x07 },
	 { 0x3807, 0x9f },
	 { 0x4004, 0x02 },
	{ TABLE_END, 0x00 },	//
};

//-----------------------------------------------------------------------------------------
static const struct sensor_cmd imx219_miscellaneous[] = {
	{ 0x30EB, 0x05 }, /* Access Code for address over 0x3000 */
	{ 0x30EB, 0x0C }, /* Access Code for address over 0x3000 */
	{ 0x300A, 0xFF }, /* Access Code for address over 0x3000 */
	{ 0x300B, 0xFF }, /* Access Code for address over 0x3000 */
	{ 0x30EB, 0x05 }, /* Access Code for address over 0x3000 */
	{ 0x30EB, 0x09 }, /* Access Code for address over 0x3000 */
	{ 0x0114, 0x03 }, /* CSI_LANE_MODE[1:0} */
	{ 0x0128, 0x00 }, /* DPHY_CNTRL */
	{ 0x012A, 0x18 }, /* EXCK_FREQ[15:8] */
	{ 0x012B, 0x00 }, /* EXCK_FREQ[7:0] */
	{ 0x0160, 0x0A }, /* FRM_LENGTH_A[15:8] */
	{ 0x0161, 0x83 }, /* FRM_LENGTH_A[7:0] */
	{ 0x0162, 0x0D }, /* LINE_LENGTH_A[15:8] */
	{ 0x0163, 0x78 }, /* LINE_LENGTH_A[7:0] */
	{ 0x0170, 0x01 }, /* X_ODD_INC_A[2:0] */
	{ 0x0171, 0x01 }, /* Y_ODD_INC_A[2:0] */
	{ 0x0174, 0x00 }, /* BINNING_MODE_H_A */
	{ 0x0175, 0x00 }, /* BINNING_MODE_V_A */
	{ 0x018C, 0x0A }, /* CSI_DATA_FORMAT_A[15:8] */
	{ 0x018D, 0x0A }, /* CSI_DATA_FORMAT_A[7:0] */
	{ 0x0301, 0x05 }, /* VTPXCK_DIV */
	{ 0x0303, 0x01 }, /* VTSYCK_DIV */
	{ 0x0304, 0x03 }, /* PREPLLCK_VT_DIV[3:0] */
	{ 0x0305, 0x03 }, /* PREPLLCK_OP_DIV[3:0] */
	{ 0x0306, 0x00 }, /* PLL_VT_MPY[10:8] */
	{ 0x0307, 0x57 }, /* PLL_VT_MPY[7:0] */
	{ 0x0309, 0x0A }, /* OPPXCK_DIV[4:0] */
	{ 0x030B, 0x01 }, /* OPSYCK_DIV */
	{ 0x030C, 0x00 }, /* PLL_OP_MPY[10:8] */
	{ 0x030D, 0x5A }, /* PLL_OP_MPY[7:0] */
	{ 0x455E, 0x00 }, /* CIS Tuning */
	{ 0x471E, 0x4B }, /* CIS Tuning */
	{ 0x4767, 0x0F }, /* CIS Tuning */
	{ 0x4750, 0x14 }, /* CIS Tuning */
	{ 0x4540, 0x00 }, /* CIS Tuning */
	{ 0x47B4, 0x14 }, /* CIS Tuning */
	{ 0x4713, 0x30 }, /* CIS Tuning */
	{ 0x478B, 0x10 }, /* CIS Tuning */
	{ 0x478F, 0x10 }, /* CIS Tuning */
	{ 0x4793, 0x10 }, /* CIS Tuning */
	{ 0x4797, 0x0E }, /* CIS Tuning */
	{ 0x479B, 0x0E }, /* CIS Tuning */
	{ TABLE_END, 0x00 }
};
/* 3280x2464@15 FPS */
static const struct sensor_cmd imx219_1test[] = {
	{0x0100, 0x00},		 // 0=OFF, 1=Stream, 2=MAX
	{0x30EB, 0x05},
	{0x30EB, 0x0C},
	{0x300A, 0xFF},
	{0x300B, 0xFF},
	{0x30EB, 0x05},
	{0x30EB, 0x09},
	{0x0114, 0x01},		// CSI MIPI Lanes [1:0]  (0x01=2, 0x03=4)
	{0x0128, 0x00},		// DPHY_CNTRL
	{0x012A, 0x18},		// EXCK_FREQ [15:8]
	{0x012B, 0x00},		// EXCK_FREQ [7:0]
	{0x0157, 0x00},			// Analog Gain
	{0x0158, 0x00},			// Digital Gain [15:8]
	{0x0159, 0x00},			 // Digital Gain [7:0]
		  // {0x015A, 0x01},		// Shutter/Integration Time [15:8]
		  // {0x015B, 0x00},		// Shutter/Integration Time [7:0]
	{0x0160, 0x09},		// Frame Length [15:8]
	{0x0161, 0xC8},		// Frame Length [7:0]
	{0x0162, 0x0D},		// Line Length [15:8]
	{0x0163, 0x78},		// Line Length [7:0]
	{0x0164, 0x00},
	{0x0165, 0x00},
	{0x0166, 0x0C},
	{0x0167, 0xCF},
	{0x0168, 0x00},
	{0x0169, 0x00},
	{0x016A, 0x09},
	{0x016B, 0x9F},
	{0x016C, 0x0C},
	{0x016D, 0xD0},
	{0x016E, 0x09},
	{0x016F, 0xA0},
	{0x0170, 0x01},		// X_ODD_INC [2:0]
	{0x0171, 0x01},		// Y_ODD_INC [2:0]
	{0x0172, 0x03},
	{0x0174, 0x00},		// Binning Mode H_A
	{0x0175, 0x00},		// Binning Mode V_A
	{0x018C, 0x0A},		// CSI Data Format [15:8]
	{0x018D, 0x0A},		// CSI Data Format [7:0]
	{0x0301, 0x05},		// VTPXCK_DIV
	{0x0303, 0x01},		// VTSYCK_DIV
	{0x0304, 0x03},		// PREPLLCK_VT_DIV [3:0]
	{0x0305, 0x03},		// PREPLLCK_OP_DIV [3:0]
	{0x0306, 0x00},		// PLL_VT_MPY [10:8]
	{0x0307, 0x2B},		// PLL_VT_MPY [7:0]
	{0x0309, 0x0A},		// OPPXCK_DIV [4:0]
	{0x030B, 0x01},		// OPSYCK_DIV 
	{0x030C, 0x00},		// PLL_OP_MPY [10:8]
	{0x030D, 0x55},		// PLL_OP_MPY [7:0]
	{0x455E, 0x00},		// CIS Tuning ?
	{0x471E, 0x4B},		// CIS Tuning ?
	{0x4767, 0x0F},		// CIS Tuning ?
	{0x4750, 0x14},		// CIS Tuning ?
	{0x4540, 0x00},		// CIS Tuning ?
	{0x47B4, 0x14},		// CIS Tuning ?
	{0x4713, 0x30},		// CIS Tuning ?
	{0x478B, 0x10},		// CIS Tuning ?
	{0x478F, 0x10},		// CIS Tuning ?
	{0x4797, 0x0E},		// CIS Tuning ?
	{0x479B, 0x0E},		// CIS Tuning ?
	{TABLE_END, 0x00}
};

static struct sensor_cmd imx219_720p_regs[] = { //720: 1280*720@30fps
	{0x30EB, 0x05},
	{0x30EB, 0x0C},
	{0x300A, 0xFF},
	{0x300B, 0xFF},
	{0x30EB, 0x05},
	{0x30EB, 0x09},

	{0x0114, 0x01},	// CSI_LANE_MODE = 2-lane
	{0x0128, 0x00},	// DPHY_CTRL = auto mode

	{0x012A, 0x13},	// EXCLK_FREQ[15:8]
	{0x012B, 0x34},	// EXCLK_FREQ[7:0] = 4916 MHz

	{0x0160, 0x04},	// FRM_LENGTH_A[15:8]
	{0x0161, 0x60},	// FRM_LENGTH_A[7:0] = 1120
	{0x0162, 0x0D},	// LINE_LENGTH_A[15:8]
	{0x0163, 0x78},	// LINE_LENGTH_A[7:0] = 3448
	{0x0164, 0x01},	// XADD_STA_A[11:8]
	{0x0165, 0x58},	// XADD_STA_A[7:0] = X top left = 344
	{0x0166, 0x0B},	// XADD_END_A[11:8]
	{0x0167, 0x77},	// XADD_END_A[7:0] = X bottom right = 2935
	{0x0168, 0x01},	// YADD_STA_A[11:8]
	{0x0169, 0xF0},	// YADD_STA_A[7:0] = Y top left = 496
	{0x016A, 0x07},	// YADD_END_A[11:8]
	{0x016B, 0xAF},	// YADD_END_A[7:0] = Y bottom right = 1967
	{0x016C, 0x05},	// x_output_size[11:8]
	{0x016D, 0x10},	// x_output_size[7:0] = 1296
	{0x016E, 0x02},	// y_output_size[11:8]
	{0x016F, 0xE0}, // y_output_size[7:0] = 736
	{0x0170, 0x01},	// X_ODD_INC_A
	{0x0171, 0x01},	// Y_ODD_INC_A
	{0x0174, 0x01},	// BINNING_MODE_H_A = x2-binning
	{0x0175, 0x01},	// BINNING_MODE_V_A = x2-binning
//    {0x0174, 0x00}, // BINNING_MODE_H_A = no-binning
//    {0x0175, 0x00}, // BINNING_MODE_V_A = no-binning
	{0x0176, 0x01},	// BINNING_CAL_MODE_H_A
	{0x0177, 0x01},	// BINNING_CAL_MODE_V_A
	{0x018C, 0x0A},	// CSI_DATA_FORMAT_A[15:8]
	{0x018D, 0x0A},	// CSI_DATA_FORMAT_A[7:0]
	{0x0301, 0x05},
	{0x0303, 0x01},
	{0x0304, 0x02},
	{0x0305, 0x02},
    {0x0309, 0x0A}, // OPPXCK_DIV
	{0x030B, 0x01}, // OPSYCK_DIV

	{0x0306, 0x00},	// PLL_VT_MPY[10:8]
	//{0x0307, 0x2E},	// PLL_VT_MPY[7:0] = 46
    {0x0307, 0x17}, // PLL_VT_MPY[7:0] = 23
    //{0x0307, 0x0F}, // PLL_VT_MPY[7:0] = 15

	{0x030C, 0x00},	// PLL_OP_MPY[10:8]
	//{0x030D, 0x5C}, // PLL_OP_MPY[7:0] = 92
    {0x030D, 0x2E}, // PLL_OP_MPY[7:0] = 46
    //{0x030D, 0x1E}, // PLL_OP_MPY[7:0] = 30

//	{0x0601, 0x01},
//	{0x0602, 0x03},
//	{0x0603, 0xff},
//	{0x0620, 0x00},
//	{0x0621, 0x00},
//	{0x0622, 0x00},
//	{0x0623, 0x00},
//	{0x0624, 0x05},
//	{0x0625, 0x00},
//	{0x0626, 0x02},
//	{0x0627, 0xD0},

	{0x0157, 0x20},
//		{0x0189, 0xc0},
//		{0x018A, 0x80},
	{0x0257, 0x20},
//		{0x0289, 0xc0},
//		{0x028A, 0x80},

	{0x455E, 0x00},
	{0x471E, 0x4B},
	{0x4767, 0x0F},
	{0x4750, 0x14},
	{0x4540, 0x00},
	{0x47B4, 0x14},
	{0x4713, 0x30},
	{0x478B, 0x10},
	{0x478F, 0x10},
	{0x4793, 0x10},
	{0x4797, 0x0E},
	{0x479B, 0x0E},
	//{0x0601, 0x02}, // Test pattern = Color bar
    {0x0601, 0x00}, // Test pattern = Normal work
	{0x0620, 0x00},	// TP_WINDOW_X_OFFSET[11:8]
    {0x0621, 0x00}, // TP_WINDOW_X_OFFSET[7:0]
    {0x0621, 0x00}, // TP_WINDOW_Y_OFFSET[11:8]
    {0x0623, 0x00}, // TP_WINDOW_Y_OFFSET[7:0]
    {0x0624, 0x05}, // TP_WINDOW_WIDTH[11:8]
    {0x0625, 0x00}, // TP_WINDOW_WIDTH[7:0] = 1280
    {0x0626, 0x02}, // TP_WINDOW_HEIGHT[11:8]
    {0x0627, 0xD0}, // TP_WINDOW_HEIGHT[7:0] = 720
    {0x0100, 0x01}, /* mode select streaming on */
    {TABLE_END, 0x00}
};

static struct sensor_cmd sensor_1080p_regs[] = { //1080: 1920*1080@30fps
//		{0x0100, 0x00},
//		{0x30EB, 0x05},
//		{0x30EB, 0x0C},
//		{0x300A, 0xFF},
//		{0x300B, 0xFF},
//		{0x30EB, 0x05},
//		{0x30EB, 0x09},
//		{0x0114, 0x01},
//		{0x0128, 0x00},
//		{0x012A, 0x18},
//		{0x012B, 0x00},
//		{0x0160, 0x06},
//		{0x0161, 0xE6},
//		{0x0162, 0x0D},
//		{0x0163, 0x78},
//		{0x0164, 0x02},
//		{0x0165, 0xA8},
//		{0x0166, 0x0A},
//		{0x0167, 0x27},
//		{0x0168, 0x02},
//		{0x0169, 0xB4},
//		{0x016A, 0x06},
//		{0x016B, 0xEB},
//		{0x016C, 0x07},
//		{0x016D, 0x80},
//		{0x016E, 0x04},
//		{0x016F, 0x38},
//		{0x0170, 0x01},
//		{0x0171, 0x01},
//		{0x0174, 0x00},
//		{0x0175, 0x00},
//		{0x018C, 0x0A},
//		{0x018D, 0x0A},
//		{0x0301, 0x05},
//		{0x0303, 0x01},
//		{0x0304, 0x03},
//		{0x0305, 0x03},
//		{0x0306, 0x00},
//		{0x0307, 0x39},
//		{0x0309, 0x0A},
//		{0x030B, 0x01},
//		{0x030C, 0x00},
//		{0x030D, 0x72},
//

////
//		{0x0157, 232},
////		{0x0189, 0xc0},
////		{0x018A, 0x80},
////		{0x0257, 0xE0},
////		{0x0289, 0xc0},
////		{0x028A, 0x80},
//
//		{0x455E, 0x00},
//		{0x471E, 0x4B},
//		{0x4767, 0x0F},
//		{0x4750, 0x14},
//		{0x4540, 0x00},
//		{0x47B4, 0x14},
//		{0x0100, 0x01},
		{0x30EB, 0x05},
		{0x30EB, 0x0C},
		{0x300A, 0xFF},
		{0x300B, 0xFF},
		{0x30EB, 0x05},
		{0x30EB, 0x09},
		{0x0114, 0x01}, // 2-wire csi
		{0x0128, 0x00}, // auto MIPI global timing
		{0x012A, 0x18}, // INCK freq: 24.0Mhz
		{0x012B, 0x00},
		{0x0160, 0x04}, // frame length lines = 1113
		{0x0161, 0x59},
		{0x0162, 0x0D}, // line length pixels = 3448
		{0x0163, 0x78},
		{0x0164, 0x02}, // x-start address = 680
		{0x0165, 0xA8},
		{0x0166, 0x0A}, // x-end address = 2599
		{0x0167, 0x27},
		{0x0168, 0x02}, // y-start address = 692
		{0x0169, 0xB4},
		{0x016A, 0x06}, // y-end address = 1771
		{0x016B, 0xEB},
		{0x016C, 0x07}, // x-output size = 1920
		{0x016D, 0x80},
		{0x016E, 0x04}, // y-output size = 1080
		{0x016F, 0x38},
		{0x0170, 0x01}, //
		{0x0171, 0x01},
		{0x0174, 0x00},
		{0x0175, 0x00},
		{0x018C, 0x0A},
		{0x018D, 0x0A},
		{0x0301, 0x05}, // video timing pixel clock divider value = 5
		{0x0303, 0x01}, // video timing system clock divider value = 1
		{0x0304, 0x03}, // external clock 24-27MHz
		{0x0305, 0x03}, // external clock 24-27MHz
		{0x0306, 0x00}, // PLL Video Timing system multiplier value = 57
		{0x0307, 0x39},
		{0x0309, 0x0A}, // output pixel clock divider value = 10
		{0x030B, 0x01}, // output system clock divider value = 1
		{0x030C, 0x00}, // PLL output system multiplier value = 114
		{0x030D, 0x72},
		{0x455E, 0x00},
		{0x471E, 0x4B},
		{0x4767, 0x0F},
		{0x4750, 0x14},
		{0x4540, 0x00},
		{0x47B4, 0x14},
		{0x4713, 0x30},
		{0x478B, 0x10},
		{0x478F, 0x10},
		{0x4793, 0x10},
		{0x4797, 0x0E},
		{0x479B, 0x0E},


//
//		{0x0601, 0x02},
//		{0x0602, 0x03},
//		{0x0603, 0xff},
//		{0x0620, 0x00},
//		{0x0621, 0x00},
//		{0x0622, 0x00},
//		{0x0623, 0x00},
//		{0x0624, 0x07},
//		{0x0625, 0x80},
//		{0x0626, 0x04},
//		{0x0627, 0x38},
		{0x0157, 0xe0},

		{0x0100, 0x01},
		{TABLE_END, 0x00}
};

static struct sensor_cmd sensor_1080p_regs1[] = { //1080: 1920*1080@30fps
// MIPI=720Mbps
// 1920x1080 30fps
{0x30EB , 0x05 },
{0x30EB , 0x0C },
{0x300A , 0xFF },
{0x300B , 0xFF },
{0x30EB , 0x05 },
{0x30EB , 0x09 },
//{0x     , 0x   },
{0x0114 , 0x03 },
{0x0128 , 0x00 },
{0x012A , 0x18 },
{0x012B , 0x00 },
//{0x0157 , 0x   },
//{0x015A , 0x   },
//{0x015B , 0x   },
{0x0160 , 0x0A },
{0x0161 , 0x2F },
{0x0162 , 0x0D },
{0x0163 , 0xE8 },
{0x0164 , 0x02 },
{0x0165 , 0xA8 },
{0x0166 , 0x0A },
{0x0167 , 0x27 },
{0x0168 , 0x02 },
{0x0169 , 0xB4 },
{0x016A , 0x06 },
{0x016B , 0xEB },
{0x016C , 0x07 },
{0x016D , 0x80 },
{0x016E , 0x04 },
{0x016F , 0x38 },
{0x0170 , 0x01 },
{0x0171 , 0x01 },
{0x0174 , 0x00 },
{0x0175 , 0x00 },
{0x018C , 0x0A },
{0x018D , 0x0A },
{0x0301 , 0x05 },
{0x0303 , 0x01 },
{0x0304 , 0x03 },
{0x0305 , 0x03 },
{0x0306 , 0x00 },
{0x0307 , 0x57 },
{0x0309 , 0x0A },
{0x030B , 0x01 },
{0x030C , 0x00 },
{0x030D , 0x5A },
//{0x4767 , 0x0F },
//{0x4750 , 0x14 },
//{0x47B4 , 0x14 },
{0x0100,0x01},
{TABLE_END, 0x00}
};


static struct sensor_cmd imx219_720p_45fps_regs[] = { //720: 1280*720@45fps
	{0x30EB, 0x05},
	{0x30EB, 0x0C},
	{0x300A, 0xFF},
	{0x300B, 0xFF},
	{0x30EB, 0x05},
	{0x30EB, 0x09},

	{0x0114, 0x01},
	{0x0128, 0x00},

	{0x012A, 0x13},		// EXCLK_FREQ[15:8] 
	{0x012B, 0x34},		// EXCLK_FREQ[7:0] = 4916 MHz

//    {0x012A, 0x09}, 	// EXCLK_FREQ[15:8]
//	{0x012B, 0x9A}, 	// EXCLK_FREQ[7:0] = 2458 MHz

//    {0x012A, 0x26}, // * EXCLK_FREQ[15:8]
//    {0x012B, 0x68}, // * EXCLK_FREQ[7:0] = 4916 MHz
//    {0x012A, 0x18}, // * EXCLK_FREQ[15:8]
//	{0x012B, 0x00}, // * EXCLK_FREQ[7:0] = 4916 MHz

	{0x0160, 0x04},
	{0x0161, 0x60},
	{0x0162, 0x0D},
	{0x0163, 0x78},
	{0x0164, 0x01},
	{0x0165, 0x58},
	{0x0166, 0x0B},
	{0x0167, 0x77},
	{0x0168, 0x01},
	{0x0169, 0xF0},
	{0x016A, 0x07},
	{0x016B, 0xAF},
	{0x016C, 0x05},
	{0x016D, 0x10},
	{0x016E, 0x02},
	{0x016F, 0xE0},
	{0x0170, 0x01},
	{0x0171, 0x01},
	{0x0174, 0x01},
	{0x0175, 0x01},
	{0x0176, 0x01},
	{0x0177, 0x01},
	{0x018C, 0x0A},
	{0x018D, 0x0A},
	{0x0301, 0x05},
	{0x0303, 0x01},
	{0x0304, 0x02},
	{0x0305, 0x02},
	{0x0306, 0x00},
	{0x0307, 0x2E},
	{0x0309, 0x0A},
	{0x030B, 0x01},

	//{0x030C, 0x00},		// PLL_OP_MPY[10:8] 
	//{0x030D, 0x5C},		// PLL_OP_MPY[7:0] = 92

    {0x030C, 0x00},     // PLL_OP_MPY[10:8] 
	{0x030D, 0xB8},     // PLL_OP_MPY[7:0] = 184

	{0x455E, 0x00},
	{0x471E, 0x4B},
	{0x4767, 0x0F},
	{0x4750, 0x14},
	{0x4540, 0x00},
	{0x47B4, 0x14},
	{0x4713, 0x30},
	{0x478B, 0x10},
	{0x478F, 0x10},
	{0x4793, 0x10},
	{0x4797, 0x0E},
	{0x479B, 0x0E},
    {0x0100, 0x01}, /* mode select streaming on */
    {TABLE_END, 0x00}
};



static const struct sensor_cmd imx219_start[] = {
	{0x0100, 0x01}, /* mode select streaming on */
	{TABLE_END, 0x00}
};
static const struct sensor_cmd imx219_stop[] = {
	{0x0100, 0x00}, /* mode select streaming off */
	{TABLE_END, 0x00}
};
static const struct sensor_cmd imx219_test_color_bar[] = {
	{0x0600, 0x00},
	{0x0601, 0x02},
	{TABLE_END, 0x00}
};

struct sensor_rect {
	 unsigned short left;
	 unsigned short top;
	 unsigned short width;
	 unsigned short height;
};

static const struct sensor_rect imx219_center_1280x720_rect = {
	1000, 872, 1280, 720
};


#endif
